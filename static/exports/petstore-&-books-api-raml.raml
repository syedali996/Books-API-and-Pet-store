#%RAML 0.8
title: Petstore & Books API
version: 3.0.0
documentation:
- title: Petstore & Books API
  content: |
    The Books API provides information about book reviews and The New York Times Best Sellers lists.


    ## Best Sellers Lists Services

    ### List Names

    The lists/names service returns a list of all the NYT Best Sellers Lists.  Some lists are published weekly and others monthly.  The response includes when each list was first published and last published.


    ```

    /lists/names.json

    ```


    ### List Data


    The lists/{date}/{name} service returns the books on the best sellers list for the specified date and list name.


    ```

    /lists/2019-01-20/hardcover-fiction.json

    ```


    Use "current" for {date} to get the latest list.

    ```

    /lists/current/hardcover-fiction.json

    ```


    ## Book Reviews Services


    The book reviews service lets you get NYT book review by author, ISBN, or title.


    ```

    /reviews.json?author=Michelle+Obama

    ```


    ```

    /reviews.json?isbn=9781524763138

    ```


    ```

    /reviews.json?title=Becoming

    ```


    ## Example Calls


    ```

    https://api.nytimes.com/svc/books/v3/lists/current/hardcover-fiction.json?api-key=yourkey

    ```


    ```

    https://api.nytimes.com/svc/books/v3/reviews.json?author=Stephen+King&api-key=yourkey

    ```
baseUri: https://api.nytimes.com/svc/books/v3
securedBy: []
protocols:
- HTTPS
- HTTP
baseUriParameters: {}
schemas:
- OverviewResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "OverviewResponse",
      "title": "OverviewResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "num_results": {
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "id": "Results",
          "title": "Results",
          "type": "object",
          "properties": {
            "bestsellers_date": {
              "type": "string"
            },
            "published_date": {
              "type": "string"
            },
            "lists": {
              "description": "",
              "type": "array",
              "items": {
                "id": "List",
                "title": "List",
                "type": "object",
                "properties": {
                  "list_id": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "list_name": {
                    "type": "string"
                  },
                  "display_name": {
                    "type": "string"
                  },
                  "updated": {
                    "type": "string"
                  },
                  "list_image": {
                    "type": "string"
                  },
                  "books": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Book",
                      "title": "Book",
                      "type": "object",
                      "properties": {
                        "age_group": {
                          "type": "string"
                        },
                        "author": {
                          "type": "string"
                        },
                        "contributor": {
                          "type": "string"
                        },
                        "contributor_note": {
                          "type": "string"
                        },
                        "created_date": {
                          "type": "string"
                        },
                        "description": {
                          "type": "string"
                        },
                        "price": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "primary_isbn13": {
                          "type": "string"
                        },
                        "primary_isbn10": {
                          "type": "string"
                        },
                        "publisher": {
                          "type": "string"
                        },
                        "rank": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "title": {
                          "type": "string"
                        },
                        "updated_date": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
- Book: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Book",
      "title": "Book",
      "type": "object",
      "properties": {
        "age_group": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "contributor": {
          "type": "string"
        },
        "contributor_note": {
          "type": "string"
        },
        "created_date": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "primary_isbn13": {
          "type": "string"
        },
        "primary_isbn10": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "updated_date": {
          "type": "string"
        }
      }
    }
- Book1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Book1",
      "title": "Book1",
      "type": "object",
      "properties": {
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "rank_last_week": {
          "type": "integer",
          "format": "int32"
        },
        "weeks_on_list": {
          "type": "integer",
          "format": "int32"
        },
        "asterisk": {
          "type": "integer",
          "format": "int32"
        },
        "dagger": {
          "type": "integer",
          "format": "int32"
        },
        "primary_isbn10": {
          "type": "string"
        },
        "primary_isbn13": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "title": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "contributor": {
          "type": "string"
        },
        "contributor_note": {
          "type": "string"
        },
        "book_image": {
          "type": "string"
        },
        "amazon_product_url": {
          "type": "string"
        },
        "age_group": {
          "type": "string"
        },
        "book_review_link": {
          "type": "string"
        },
        "first_chapter_link": {
          "type": "string"
        },
        "sunday_review_link": {
          "type": "string"
        },
        "article_chapter_link": {
          "type": "string"
        },
        "isbns": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Isbn",
            "title": "Isbn",
            "type": "object",
            "properties": {
              "isbn10": {
                "type": "string"
              },
              "isbn13": {
                "type": "string"
              }
            }
          }
        }
      }
    }
- BookDetail: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "BookDetail",
      "title": "BookDetail",
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contributor": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "contributor_note": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "age_group": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "primary_isbn13": {
          "type": "string"
        },
        "primary_isbn10": {
          "type": "string"
        }
      }
    }
- GET_lists-best-sellers-history-jsonResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GET_lists-best-sellers-history-jsonResponse",
      "title": "GET_lists-best-sellers-history-jsonResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "num_results": {
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Results4",
            "title": "Results4",
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "contributor": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "contributor_note": {
                "type": "string"
              },
              "price": {
                "type": "integer",
                "format": "int32"
              },
              "age_group": {
                "type": "string"
              },
              "publisher": {
                "type": "string"
              },
              "isbns": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Isbn",
                  "title": "Isbn",
                  "type": "object",
                  "properties": {
                    "isbn10": {
                      "type": "string"
                    },
                    "isbn13": {
                      "type": "string"
                    }
                  }
                }
              },
              "ranks_history": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "RanksHistory",
                  "title": "RanksHistory",
                  "type": "object",
                  "properties": {
                    "primary_isbn10": {
                      "type": "string"
                    },
                    "primary_isbn13": {
                      "type": "string"
                    },
                    "rank": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "list_name": {
                      "type": "string"
                    },
                    "display_name": {
                      "type": "string"
                    },
                    "published_date": {
                      "type": "string"
                    },
                    "bestsellers_date": {
                      "type": "string"
                    },
                    "weeks_on_list": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "ranks_last_week": {
                      "type": [
                        "string",
                        "null"
                      ]
                    },
                    "asterisk": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "dagger": {
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
              },
              "reviews": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Review",
                  "title": "Review",
                  "type": "object",
                  "properties": {
                    "book_review_link": {
                      "type": "string"
                    },
                    "first_chapter_link": {
                      "type": "string"
                    },
                    "sunday_review_link": {
                      "type": "string"
                    },
                    "article_chapter_link": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
- GET_lists-date-list-jsonResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GET_lists-date-list-jsonResponse",
      "title": "GET_lists-date-list-jsonResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "num_results": {
          "type": "integer",
          "format": "int32"
        },
        "last_modified": {
          "type": "string"
        },
        "results": {
          "id": "Results2",
          "title": "Results2",
          "type": "object",
          "properties": {
            "list_name": {
              "type": "string"
            },
            "bestsellers_date": {
              "type": "string"
            },
            "published_date": {
              "type": "string"
            },
            "display_name": {
              "type": "string"
            },
            "normal_list_ends_at": {
              "type": "integer",
              "format": "int32"
            },
            "updated": {
              "type": "string"
            },
            "books": {
              "description": "",
              "type": "array",
              "items": {
                "id": "Book1",
                "title": "Book1",
                "type": "object",
                "properties": {
                  "rank": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "rank_last_week": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "weeks_on_list": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "asterisk": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "dagger": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "primary_isbn10": {
                    "type": "string"
                  },
                  "primary_isbn13": {
                    "type": "string"
                  },
                  "publisher": {
                    "type": "string"
                  },
                  "description": {
                    "type": "string"
                  },
                  "price": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "title": {
                    "type": "string"
                  },
                  "author": {
                    "type": "string"
                  },
                  "contributor": {
                    "type": "string"
                  },
                  "contributor_note": {
                    "type": "string"
                  },
                  "book_image": {
                    "type": "string"
                  },
                  "amazon_product_url": {
                    "type": "string"
                  },
                  "age_group": {
                    "type": "string"
                  },
                  "book_review_link": {
                    "type": "string"
                  },
                  "first_chapter_link": {
                    "type": "string"
                  },
                  "sunday_review_link": {
                    "type": "string"
                  },
                  "article_chapter_link": {
                    "type": "string"
                  },
                  "isbns": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Isbn",
                      "title": "Isbn",
                      "type": "object",
                      "properties": {
                        "isbn10": {
                          "type": "string"
                        },
                        "isbn13": {
                          "type": "string"
                        }
                      }
                    }
                  }
                }
              }
            },
            "corrections": {
              "description": "",
              "type": "array",
              "items": {
                "type": "object"
              }
            }
          }
        }
      }
    }
- GET_lists-formatResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GET_lists-formatResponse",
      "title": "GET_lists-formatResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "num_results": {
          "type": "integer",
          "format": "int32"
        },
        "last_modified": {
          "type": "string"
        },
        "results": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Results1",
            "title": "Results1",
            "type": "object",
            "properties": {
              "list_name": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "bestsellers_date": {
                "type": "string"
              },
              "published_date": {
                "type": "string"
              },
              "rank": {
                "type": "integer",
                "format": "int32"
              },
              "rank_last_week": {
                "type": "integer",
                "format": "int32"
              },
              "weeks_on_list": {
                "type": "integer",
                "format": "int32"
              },
              "asterisk": {
                "type": "integer",
                "format": "int32"
              },
              "dagger": {
                "type": "integer",
                "format": "int32"
              },
              "amazon_product_url": {
                "type": "string"
              },
              "isbns": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Isbn",
                  "title": "Isbn",
                  "type": "object",
                  "properties": {
                    "isbn10": {
                      "type": "string"
                    },
                    "isbn13": {
                      "type": "string"
                    }
                  }
                }
              },
              "book_details": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "BookDetail",
                  "title": "BookDetail",
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "contributor": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "contributor_note": {
                      "type": "string"
                    },
                    "price": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "age_group": {
                      "type": "string"
                    },
                    "publisher": {
                      "type": "string"
                    },
                    "primary_isbn13": {
                      "type": "string"
                    },
                    "primary_isbn10": {
                      "type": "string"
                    }
                  }
                }
              },
              "reviews": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Review",
                  "title": "Review",
                  "type": "object",
                  "properties": {
                    "book_review_link": {
                      "type": "string"
                    },
                    "first_chapter_link": {
                      "type": "string"
                    },
                    "sunday_review_link": {
                      "type": "string"
                    },
                    "article_chapter_link": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
- GET_lists-names-formatResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GET_lists-names-formatResponse",
      "title": "GET_lists-names-formatResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "num_results": {
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Results3",
            "title": "Results3",
            "type": "object",
            "properties": {
              "list_name": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "list_name_encoded": {
                "type": "string"
              },
              "oldest_published_date": {
                "type": "string"
              },
              "newest_published_date": {
                "type": "string"
              },
              "updated": {
                "title": "Updated",
                "type": "string",
                "enum": [
                  "WEEKLY",
                  "MONTHLY"
                ]
              }
            }
          }
        }
      }
    }
- GET_reviews-formatResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "GET_reviews-formatResponse",
      "title": "GET_reviews-formatResponse",
      "type": "object",
      "properties": {
        "status": {
          "type": "string"
        },
        "copyright": {
          "type": "string"
        },
        "num_results": {
          "type": "integer",
          "format": "int32"
        },
        "results": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Results5",
            "title": "Results5",
            "type": "object",
            "properties": {
              "url": {
                "type": "string"
              },
              "publication_dt": {
                "type": "string"
              },
              "byline": {
                "type": "string"
              },
              "book_title": {
                "type": "string"
              },
              "book_author": {
                "type": "string"
              },
              "summary": {
                "type": "string"
              },
              "isbn13": {
                "description": "",
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          }
        }
      }
    }
- Isbn: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Isbn",
      "title": "Isbn",
      "type": "object",
      "properties": {
        "isbn10": {
          "type": "string"
        },
        "isbn13": {
          "type": "string"
        }
      }
    }
- List: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "List",
      "title": "List",
      "type": "object",
      "properties": {
        "list_id": {
          "type": "integer",
          "format": "int32"
        },
        "list_name": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "updated": {
          "type": "string"
        },
        "list_image": {
          "type": "string"
        },
        "books": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Book",
            "title": "Book",
            "type": "object",
            "properties": {
              "age_group": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "contributor": {
                "type": "string"
              },
              "contributor_note": {
                "type": "string"
              },
              "created_date": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "price": {
                "type": "integer",
                "format": "int32"
              },
              "primary_isbn13": {
                "type": "string"
              },
              "primary_isbn10": {
                "type": "string"
              },
              "publisher": {
                "type": "string"
              },
              "rank": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "type": "string"
              },
              "updated_date": {
                "type": "string"
              }
            }
          }
        }
      }
    }
- RanksHistory: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "RanksHistory",
      "title": "RanksHistory",
      "type": "object",
      "properties": {
        "primary_isbn10": {
          "type": "string"
        },
        "primary_isbn13": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "list_name": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "published_date": {
          "type": "string"
        },
        "bestsellers_date": {
          "type": "string"
        },
        "weeks_on_list": {
          "type": "integer",
          "format": "int32"
        },
        "ranks_last_week": {
          "type": [
            "string",
            "null"
          ]
        },
        "asterisk": {
          "type": "integer",
          "format": "int32"
        },
        "dagger": {
          "type": "integer",
          "format": "int32"
        }
      }
    }
- Results: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Results",
      "title": "Results",
      "type": "object",
      "properties": {
        "bestsellers_date": {
          "type": "string"
        },
        "published_date": {
          "type": "string"
        },
        "lists": {
          "description": "",
          "type": "array",
          "items": {
            "id": "List",
            "title": "List",
            "type": "object",
            "properties": {
              "list_id": {
                "type": "integer",
                "format": "int32"
              },
              "list_name": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "updated": {
                "type": "string"
              },
              "list_image": {
                "type": "string"
              },
              "books": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Book",
                  "title": "Book",
                  "type": "object",
                  "properties": {
                    "age_group": {
                      "type": "string"
                    },
                    "author": {
                      "type": "string"
                    },
                    "contributor": {
                      "type": "string"
                    },
                    "contributor_note": {
                      "type": "string"
                    },
                    "created_date": {
                      "type": "string"
                    },
                    "description": {
                      "type": "string"
                    },
                    "price": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "primary_isbn13": {
                      "type": "string"
                    },
                    "primary_isbn10": {
                      "type": "string"
                    },
                    "publisher": {
                      "type": "string"
                    },
                    "rank": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "title": {
                      "type": "string"
                    },
                    "updated_date": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
- Results1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Results1",
      "title": "Results1",
      "type": "object",
      "properties": {
        "list_name": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "bestsellers_date": {
          "type": "string"
        },
        "published_date": {
          "type": "string"
        },
        "rank": {
          "type": "integer",
          "format": "int32"
        },
        "rank_last_week": {
          "type": "integer",
          "format": "int32"
        },
        "weeks_on_list": {
          "type": "integer",
          "format": "int32"
        },
        "asterisk": {
          "type": "integer",
          "format": "int32"
        },
        "dagger": {
          "type": "integer",
          "format": "int32"
        },
        "amazon_product_url": {
          "type": "string"
        },
        "isbns": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Isbn",
            "title": "Isbn",
            "type": "object",
            "properties": {
              "isbn10": {
                "type": "string"
              },
              "isbn13": {
                "type": "string"
              }
            }
          }
        },
        "book_details": {
          "description": "",
          "type": "array",
          "items": {
            "id": "BookDetail",
            "title": "BookDetail",
            "type": "object",
            "properties": {
              "title": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "contributor": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "contributor_note": {
                "type": "string"
              },
              "price": {
                "type": "integer",
                "format": "int32"
              },
              "age_group": {
                "type": "string"
              },
              "publisher": {
                "type": "string"
              },
              "primary_isbn13": {
                "type": "string"
              },
              "primary_isbn10": {
                "type": "string"
              }
            }
          }
        },
        "reviews": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Review",
            "title": "Review",
            "type": "object",
            "properties": {
              "book_review_link": {
                "type": "string"
              },
              "first_chapter_link": {
                "type": "string"
              },
              "sunday_review_link": {
                "type": "string"
              },
              "article_chapter_link": {
                "type": "string"
              }
            }
          }
        }
      }
    }
- Results2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Results2",
      "title": "Results2",
      "type": "object",
      "properties": {
        "list_name": {
          "type": "string"
        },
        "bestsellers_date": {
          "type": "string"
        },
        "published_date": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "normal_list_ends_at": {
          "type": "integer",
          "format": "int32"
        },
        "updated": {
          "type": "string"
        },
        "books": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Book1",
            "title": "Book1",
            "type": "object",
            "properties": {
              "rank": {
                "type": "integer",
                "format": "int32"
              },
              "rank_last_week": {
                "type": "integer",
                "format": "int32"
              },
              "weeks_on_list": {
                "type": "integer",
                "format": "int32"
              },
              "asterisk": {
                "type": "integer",
                "format": "int32"
              },
              "dagger": {
                "type": "integer",
                "format": "int32"
              },
              "primary_isbn10": {
                "type": "string"
              },
              "primary_isbn13": {
                "type": "string"
              },
              "publisher": {
                "type": "string"
              },
              "description": {
                "type": "string"
              },
              "price": {
                "type": "integer",
                "format": "int32"
              },
              "title": {
                "type": "string"
              },
              "author": {
                "type": "string"
              },
              "contributor": {
                "type": "string"
              },
              "contributor_note": {
                "type": "string"
              },
              "book_image": {
                "type": "string"
              },
              "amazon_product_url": {
                "type": "string"
              },
              "age_group": {
                "type": "string"
              },
              "book_review_link": {
                "type": "string"
              },
              "first_chapter_link": {
                "type": "string"
              },
              "sunday_review_link": {
                "type": "string"
              },
              "article_chapter_link": {
                "type": "string"
              },
              "isbns": {
                "description": "",
                "type": "array",
                "items": {
                  "id": "Isbn",
                  "title": "Isbn",
                  "type": "object",
                  "properties": {
                    "isbn10": {
                      "type": "string"
                    },
                    "isbn13": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          }
        },
        "corrections": {
          "description": "",
          "type": "array",
          "items": {
            "type": "object"
          }
        }
      }
    }
- Results3: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Results3",
      "title": "Results3",
      "type": "object",
      "properties": {
        "list_name": {
          "type": "string"
        },
        "display_name": {
          "type": "string"
        },
        "list_name_encoded": {
          "type": "string"
        },
        "oldest_published_date": {
          "type": "string"
        },
        "newest_published_date": {
          "type": "string"
        },
        "updated": {
          "title": "Updated",
          "type": "string",
          "enum": [
            "WEEKLY",
            "MONTHLY"
          ]
        }
      }
    }
- Results4: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Results4",
      "title": "Results4",
      "type": "object",
      "properties": {
        "title": {
          "type": "string"
        },
        "description": {
          "type": "string"
        },
        "contributor": {
          "type": "string"
        },
        "author": {
          "type": "string"
        },
        "contributor_note": {
          "type": "string"
        },
        "price": {
          "type": "integer",
          "format": "int32"
        },
        "age_group": {
          "type": "string"
        },
        "publisher": {
          "type": "string"
        },
        "isbns": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Isbn",
            "title": "Isbn",
            "type": "object",
            "properties": {
              "isbn10": {
                "type": "string"
              },
              "isbn13": {
                "type": "string"
              }
            }
          }
        },
        "ranks_history": {
          "description": "",
          "type": "array",
          "items": {
            "id": "RanksHistory",
            "title": "RanksHistory",
            "type": "object",
            "properties": {
              "primary_isbn10": {
                "type": "string"
              },
              "primary_isbn13": {
                "type": "string"
              },
              "rank": {
                "type": "integer",
                "format": "int32"
              },
              "list_name": {
                "type": "string"
              },
              "display_name": {
                "type": "string"
              },
              "published_date": {
                "type": "string"
              },
              "bestsellers_date": {
                "type": "string"
              },
              "weeks_on_list": {
                "type": "integer",
                "format": "int32"
              },
              "ranks_last_week": {
                "type": [
                  "string",
                  "null"
                ]
              },
              "asterisk": {
                "type": "integer",
                "format": "int32"
              },
              "dagger": {
                "type": "integer",
                "format": "int32"
              }
            }
          }
        },
        "reviews": {
          "description": "",
          "type": "array",
          "items": {
            "id": "Review",
            "title": "Review",
            "type": "object",
            "properties": {
              "book_review_link": {
                "type": "string"
              },
              "first_chapter_link": {
                "type": "string"
              },
              "sunday_review_link": {
                "type": "string"
              },
              "article_chapter_link": {
                "type": "string"
              }
            }
          }
        }
      }
    }
- Results5: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Results5",
      "title": "Results5",
      "type": "object",
      "properties": {
        "url": {
          "type": "string"
        },
        "publication_dt": {
          "type": "string"
        },
        "byline": {
          "type": "string"
        },
        "book_title": {
          "type": "string"
        },
        "book_author": {
          "type": "string"
        },
        "summary": {
          "type": "string"
        },
        "isbn13": {
          "description": "",
          "type": "array",
          "items": {
            "type": "string"
          }
        }
      }
    }
- Review: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Review",
      "title": "Review",
      "type": "object",
      "properties": {
        "book_review_link": {
          "type": "string"
        },
        "first_chapter_link": {
          "type": "string"
        },
        "sunday_review_link": {
          "type": "string"
        },
        "article_chapter_link": {
          "type": "string"
        }
      }
    }
- Updated: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Updated",
      "type": "string",
      "enum": [
        "WEEKLY",
        "MONTHLY"
      ]
    }
- Category: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Category",
      "title": "Category",
      "xml": {
        "name": "Category",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    }
- Pet: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Pet",
      "title": "Pet",
      "xml": {
        "name": "Pet",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "photoUrls": {
          "description": "",
          "xml": {
            "attribute": false,
            "wrapped": true
          },
          "type": "array",
          "items": {
            "xml": {
              "name": "photoUrl",
              "attribute": false,
              "wrapped": false
            },
            "type": "string"
          }
        },
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "category": {
          "id": "Category",
          "title": "Category",
          "xml": {
            "name": "Category",
            "attribute": false,
            "wrapped": false
          },
          "type": "object",
          "properties": {
            "id": {
              "type": "integer",
              "format": "int64"
            },
            "name": {
              "type": "string"
            }
          }
        },
        "tags": {
          "description": "",
          "xml": {
            "attribute": false,
            "wrapped": true
          },
          "type": "array",
          "items": {
            "id": "Tag",
            "title": "Tag",
            "xml": {
              "name": "Tag",
              "attribute": false,
              "wrapped": false
            },
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "name": {
                "type": "string"
              }
            }
          }
        },
        "status": {
          "title": "Status",
          "description": "pet status in the store",
          "type": "string",
          "enum": [
            "available",
            "pending",
            "sold"
          ]
        }
      },
      "required": [
        "name",
        "photoUrls"
      ]
    }
- Tag: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Tag",
      "title": "Tag",
      "xml": {
        "name": "Tag",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        }
      }
    }
- ApiResponse: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "ApiResponse",
      "title": "ApiResponse",
      "type": "object",
      "properties": {
        "code": {
          "type": "integer",
          "format": "int32"
        },
        "type": {
          "type": "string"
        },
        "message": {
          "type": "string"
        }
      }
    }
- Order: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "Order",
      "title": "Order",
      "xml": {
        "name": "Order",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "petId": {
          "type": "integer",
          "format": "int64"
        },
        "quantity": {
          "type": "integer",
          "format": "int32"
        },
        "shipDate": {
          "type": "string",
          "format": "date-time"
        },
        "status": {
          "title": "Status1",
          "description": "Order Status",
          "type": "string",
          "enum": [
            "placed",
            "approved",
            "delivered"
          ]
        },
        "complete": {
          "type": "boolean"
        }
      }
    }
- User: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "id": "User",
      "title": "User",
      "xml": {
        "name": "User",
        "attribute": false,
        "wrapped": false
      },
      "type": "object",
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "username": {
          "type": "string"
        },
        "firstName": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "phone": {
          "type": "string"
        },
        "userStatus": {
          "description": "User Status",
          "type": "integer",
          "format": "int32"
        }
      }
    }
- Status: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Status",
      "description": "pet status in the store",
      "type": "string",
      "enum": [
        "available",
        "pending",
        "sold"
      ]
    }
- Status1: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "Status1",
      "description": "Order Status",
      "type": "string",
      "enum": [
        "placed",
        "approved",
        "delivered"
      ]
    }
- status2: |
    {
      "$schema": "http://json-schema.org/draft-04/schema#",
      "title": "status2",
      "type": "string",
      "enum": [
        "available",
        "pending",
        "sold"
      ]
    }
securitySchemes:
- api-key:
    type: x-custom
    describedBy:
      queryParameters:
        api-key:
          type: string
          default: S36VNES3R5jDxeBwfdVeWvqKUQoWem8l
          required: true
          displayName: api-key
- api_key:
    type: x-custom
    describedBy:
      headers:
        api_key:
          type: string
          required: true
          displayName: api_key
- petstore_auth:
    type: OAuth 2.0
    settings:
      authorizationUri: https://petstore.swagger.io/oauth/authorize
      accessTokenUri: ''
      authorizationGrants:
      - token
      scopes:
      - read:pets
      - write:pets
/pet:
  /{petId}:
    uriParameters:
      petId:
        description: ID of pet to return
        type: integer
        required: true
        displayName: petId
    /uploadImage:
      uriParameters: {}
      post:
        securedBy:
        - petstore_auth:
            scopes:
            - write:pets
            - read:pets
        description: uploads an image
        body:
          multipart/form-data:
            formParameters:
              additionalMetadata:
                description: Additional data to pass to server
                type: string
                required: false
                displayName: additionalMetadata
              file:
                description: file to upload
                type: file
                required: false
                displayName: file
        responses:
          '200':
            description: successful operation
            body:
              application/json:
                schema: |
                  {
                    "id": "ApiResponse",
                    "title": "ApiResponse",
                    "type": "object",
                    "properties": {
                      "code": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "type": {
                        "type": "string"
                      },
                      "message": {
                        "type": "string"
                      }
                    }
                  }
    get:
      securedBy:
      - api_key
      description: Returns a single pet
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "id": "Pet",
                  "title": "Pet",
                  "xml": {
                    "name": "Pet",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "photoUrls": {
                      "description": "",
                      "xml": {
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "xml": {
                          "name": "photoUrl",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "category": {
                      "id": "Category",
                      "title": "Category",
                      "xml": {
                        "name": "Category",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "tags": {
                      "description": "",
                      "xml": {
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "id": "Tag",
                        "title": "Tag",
                        "xml": {
                          "name": "Tag",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "title": "Status",
                      "description": "pet status in the store",
                      "type": "string",
                      "enum": [
                        "available",
                        "pending",
                        "sold"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "photoUrls"
                  ]
                }
            application/xml:
              schema: |
                {
                  "id": "Pet",
                  "title": "Pet",
                  "xml": {
                    "name": "Pet",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "name": {
                      "type": "string"
                    },
                    "photoUrls": {
                      "description": "",
                      "xml": {
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "xml": {
                          "name": "photoUrl",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "string"
                      }
                    },
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "category": {
                      "id": "Category",
                      "title": "Category",
                      "xml": {
                        "name": "Category",
                        "attribute": false,
                        "wrapped": false
                      },
                      "type": "object",
                      "properties": {
                        "id": {
                          "type": "integer",
                          "format": "int64"
                        },
                        "name": {
                          "type": "string"
                        }
                      }
                    },
                    "tags": {
                      "description": "",
                      "xml": {
                        "attribute": false,
                        "wrapped": true
                      },
                      "type": "array",
                      "items": {
                        "id": "Tag",
                        "title": "Tag",
                        "xml": {
                          "name": "Tag",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      }
                    },
                    "status": {
                      "title": "Status",
                      "description": "pet status in the store",
                      "type": "string",
                      "enum": [
                        "available",
                        "pending",
                        "sold"
                      ]
                    }
                  },
                  "required": [
                    "name",
                    "photoUrls"
                  ]
                }
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
    post:
      securedBy:
      - petstore_auth:
          scopes:
          - write:pets
          - read:pets
      description: Updates a pet in the store with form data
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/x-www-form-urlencoded
      body:
        application/x-www-form-urlencoded:
          formParameters:
            name:
              description: Updated name of the pet
              type: string
              required: false
              displayName: name
            status:
              description: Updated status of the pet
              type: string
              required: false
              displayName: status
      responses:
        '405':
          description: Invalid input
    delete:
      securedBy:
      - petstore_auth:
          scopes:
          - write:pets
          - read:pets
      description: Deletes a pet
      headers:
        api_key:
          type: string
          required: false
          displayName: api_key
      responses:
        '400':
          description: Invalid ID supplied
        '404':
          description: Pet not found
  /findByStatus:
    get:
      securedBy:
      - petstore_auth:
          scopes:
          - write:pets
          - read:pets
      description: Multiple status values can be provided with comma separated strings
      queryParameters:
        status:
          description: Status values that need to be considered for filter
          required: true
          displayName: status
          enum:
          - available
          - pending
          - sold
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "description": "",
                  "type": "array",
                  "items": {
                    "id": "Pet",
                    "title": "Pet",
                    "xml": {
                      "name": "Pet",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "photoUrls": {
                        "description": "",
                        "xml": {
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "xml": {
                            "name": "photoUrl",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "category": {
                        "id": "Category",
                        "title": "Category",
                        "xml": {
                          "name": "Category",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "tags": {
                        "description": "",
                        "xml": {
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "id": "Tag",
                          "title": "Tag",
                          "xml": {
                            "name": "Tag",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "status": {
                        "title": "Status",
                        "description": "pet status in the store",
                        "type": "string",
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ]
                  }
                }
            application/xml:
              schema: |
                {
                  "description": "",
                  "xml": {
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "array",
                  "items": {
                    "id": "Pet",
                    "title": "Pet",
                    "xml": {
                      "name": "Pet",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "photoUrls": {
                        "description": "",
                        "xml": {
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "xml": {
                            "name": "photoUrl",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "category": {
                        "id": "Category",
                        "title": "Category",
                        "xml": {
                          "name": "Category",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "tags": {
                        "description": "",
                        "xml": {
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "id": "Tag",
                          "title": "Tag",
                          "xml": {
                            "name": "Tag",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "status": {
                        "title": "Status",
                        "description": "pet status in the store",
                        "type": "string",
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ]
                  }
                }
        '400':
          description: Invalid status value
  /findByTags:
    get:
      securedBy:
      - petstore_auth:
          scopes:
          - write:pets
          - read:pets
      description: Multiple tags can be provided with comma separated strings. Use tag1, tag2, tag3 for testing.
      queryParameters:
        tags:
          description: Tags to filter by
          type: string
          required: true
          displayName: tags
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "description": "",
                  "type": "array",
                  "items": {
                    "id": "Pet",
                    "title": "Pet",
                    "xml": {
                      "name": "Pet",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "photoUrls": {
                        "description": "",
                        "xml": {
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "xml": {
                            "name": "photoUrl",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "category": {
                        "id": "Category",
                        "title": "Category",
                        "xml": {
                          "name": "Category",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "tags": {
                        "description": "",
                        "xml": {
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "id": "Tag",
                          "title": "Tag",
                          "xml": {
                            "name": "Tag",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "status": {
                        "title": "Status",
                        "description": "pet status in the store",
                        "type": "string",
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ]
                  }
                }
            application/xml:
              schema: |
                {
                  "description": "",
                  "xml": {
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "array",
                  "items": {
                    "id": "Pet",
                    "title": "Pet",
                    "xml": {
                      "name": "Pet",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "name": {
                        "type": "string"
                      },
                      "photoUrls": {
                        "description": "",
                        "xml": {
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "xml": {
                            "name": "photoUrl",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "string"
                        }
                      },
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "category": {
                        "id": "Category",
                        "title": "Category",
                        "xml": {
                          "name": "Category",
                          "attribute": false,
                          "wrapped": false
                        },
                        "type": "object",
                        "properties": {
                          "id": {
                            "type": "integer",
                            "format": "int64"
                          },
                          "name": {
                            "type": "string"
                          }
                        }
                      },
                      "tags": {
                        "description": "",
                        "xml": {
                          "attribute": false,
                          "wrapped": true
                        },
                        "type": "array",
                        "items": {
                          "id": "Tag",
                          "title": "Tag",
                          "xml": {
                            "name": "Tag",
                            "attribute": false,
                            "wrapped": false
                          },
                          "type": "object",
                          "properties": {
                            "id": {
                              "type": "integer",
                              "format": "int64"
                            },
                            "name": {
                              "type": "string"
                            }
                          }
                        }
                      },
                      "status": {
                        "title": "Status",
                        "description": "pet status in the store",
                        "type": "string",
                        "enum": [
                          "available",
                          "pending",
                          "sold"
                        ]
                      }
                    },
                    "required": [
                      "name",
                      "photoUrls"
                    ]
                  }
                }
        '400':
          description: Invalid tag value
  post:
    securedBy:
    - petstore_auth:
        scopes:
        - write:pets
        - read:pets
    description: Add a new pet to the store
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "Pet",
            "title": "Pet",
            "description": "Pet object that needs to be added to the store",
            "xml": {
              "name": "Pet",
              "attribute": false,
              "wrapped": false
            },
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "photoUrls": {
                "description": "",
                "xml": {
                  "attribute": false,
                  "wrapped": true
                },
                "type": "array",
                "items": {
                  "xml": {
                    "name": "photoUrl",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "string"
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "category": {
                "id": "Category",
                "title": "Category",
                "xml": {
                  "name": "Category",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "tags": {
                "description": "",
                "xml": {
                  "attribute": false,
                  "wrapped": true
                },
                "type": "array",
                "items": {
                  "id": "Tag",
                  "title": "Tag",
                  "xml": {
                    "name": "Tag",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              },
              "status": {
                "title": "Status",
                "description": "pet status in the store",
                "type": "string",
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ]
              }
            },
            "required": [
              "name",
              "photoUrls"
            ]
          }
        example: ''
    responses:
      '405':
        description: Invalid input
  put:
    securedBy:
    - petstore_auth:
        scopes:
        - write:pets
        - read:pets
    description: Update an existing pet
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "Pet",
            "title": "Pet",
            "description": "Pet object that needs to be added to the store",
            "xml": {
              "name": "Pet",
              "attribute": false,
              "wrapped": false
            },
            "type": "object",
            "properties": {
              "name": {
                "type": "string"
              },
              "photoUrls": {
                "description": "",
                "xml": {
                  "attribute": false,
                  "wrapped": true
                },
                "type": "array",
                "items": {
                  "xml": {
                    "name": "photoUrl",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "string"
                }
              },
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "category": {
                "id": "Category",
                "title": "Category",
                "xml": {
                  "name": "Category",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "name": {
                    "type": "string"
                  }
                }
              },
              "tags": {
                "description": "",
                "xml": {
                  "attribute": false,
                  "wrapped": true
                },
                "type": "array",
                "items": {
                  "id": "Tag",
                  "title": "Tag",
                  "xml": {
                    "name": "Tag",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "name": {
                      "type": "string"
                    }
                  }
                }
              },
              "status": {
                "title": "Status",
                "description": "pet status in the store",
                "type": "string",
                "enum": [
                  "available",
                  "pending",
                  "sold"
                ]
              }
            },
            "required": [
              "name",
              "photoUrls"
            ]
          }
        example: ''
    responses:
      '400':
        description: Invalid ID supplied
      '404':
        description: Pet not found
      '405':
        description: Validation exception
/user:
  /{username}:
    uriParameters:
      username:
        description: The name that needs to be fetched. Use user1 for testing.
        type: string
        required: true
        displayName: username
    get:
      description: Get user by user name
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "id": "User",
                  "title": "User",
                  "xml": {
                    "name": "User",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "username": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "userStatus": {
                      "description": "User Status",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
            application/xml:
              schema: |
                {
                  "id": "User",
                  "title": "User",
                  "xml": {
                    "name": "User",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "username": {
                      "type": "string"
                    },
                    "firstName": {
                      "type": "string"
                    },
                    "lastName": {
                      "type": "string"
                    },
                    "email": {
                      "type": "string"
                    },
                    "password": {
                      "type": "string"
                    },
                    "phone": {
                      "type": "string"
                    },
                    "userStatus": {
                      "description": "User Status",
                      "type": "integer",
                      "format": "int32"
                    }
                  }
                }
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
    put:
      description: This can only be done by the logged in user.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "User",
              "title": "User",
              "description": "Updated user object",
              "xml": {
                "name": "User",
                "attribute": false,
                "wrapped": false
              },
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "username": {
                  "type": "string"
                },
                "firstName": {
                  "type": "string"
                },
                "lastName": {
                  "type": "string"
                },
                "email": {
                  "type": "string"
                },
                "password": {
                  "type": "string"
                },
                "phone": {
                  "type": "string"
                },
                "userStatus": {
                  "description": "User Status",
                  "type": "integer",
                  "format": "int32"
                }
              }
            }
          example: ''
      responses:
        '400':
          description: Invalid user supplied
        '404':
          description: User not found
    delete:
      description: This can only be done by the logged in user.
      responses:
        '400':
          description: Invalid username supplied
        '404':
          description: User not found
  /login:
    get:
      description: Logs user into the system
      queryParameters:
        username:
          description: The user name for login
          type: string
          required: true
          displayName: username
        password:
          description: The password for login in clear text
          type: string
          required: true
          displayName: password
      responses:
        '200':
          description: successful operation
          headers:
            X-Expires-After:
              required: false
            X-Rate-Limit:
              required: false
          body:
            application/json:
              schema: |
                {
                  "type": "string"
                }
            application/xml:
              schema: |
                {
                  "xml": {
                    "name": "response",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "string"
                }
        '400':
          description: Invalid username/password supplied
  /logout:
    get:
      description: Logs out current logged in user session
      responses:
        '0':
          description: successful operation
  /createWithArray:
    post:
      description: Creates list of users with given input array
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "description": "List of user object",
              "type": "array",
              "items": {
                "id": "User",
                "title": "User",
                "xml": {
                  "name": "User",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "userStatus": {
                    "description": "User Status",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          example: ''
      responses:
        '0':
          description: successful operation
  /createWithList:
    post:
      description: Creates list of users with given input array
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "description": "List of user object",
              "type": "array",
              "items": {
                "id": "User",
                "title": "User",
                "xml": {
                  "name": "User",
                  "attribute": false,
                  "wrapped": false
                },
                "type": "object",
                "properties": {
                  "id": {
                    "type": "integer",
                    "format": "int64"
                  },
                  "username": {
                    "type": "string"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "email": {
                    "type": "string"
                  },
                  "password": {
                    "type": "string"
                  },
                  "phone": {
                    "type": "string"
                  },
                  "userStatus": {
                    "description": "User Status",
                    "type": "integer",
                    "format": "int32"
                  }
                }
              }
            }
          example: ''
      responses:
        '0':
          description: successful operation
  post:
    description: This can only be done by the logged in user.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    body:
      application/json:
        schema: |
          {
            "id": "User",
            "title": "User",
            "description": "Created user object",
            "xml": {
              "name": "User",
              "attribute": false,
              "wrapped": false
            },
            "type": "object",
            "properties": {
              "id": {
                "type": "integer",
                "format": "int64"
              },
              "username": {
                "type": "string"
              },
              "firstName": {
                "type": "string"
              },
              "lastName": {
                "type": "string"
              },
              "email": {
                "type": "string"
              },
              "password": {
                "type": "string"
              },
              "phone": {
                "type": "string"
              },
              "userStatus": {
                "description": "User Status",
                "type": "integer",
                "format": "int32"
              }
            }
          }
        example: ''
    responses:
      '0':
        description: successful operation
/lists.json:
  get:
    securedBy:
    - api-key
    description: Get Best Sellers list.  If no date is provided returns the latest list.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    queryParameters:
      list:
        description: |
          The name of the Times best sellers list (hardcover-fiction, paperback-nonfiction, ...).

          The /lists/names service returns all the list names.

          The encoded list names are lower case with hyphens instead of spaces (e.g. e-book-fiction, instead of E-Book Fiction).
        type: string
        default: hardcover-fiction
        required: true
        displayName: list
      bestsellers-date:
        description: |
          YYYY-MM-DD


          The week-ending date for the sales reflected on list-name. Times best sellers lists are compiled using available book sale data. The bestsellers-date may be significantly earlier than published-date. For additional information, see the explanation at the bottom of any best-seller list page on NYTimes.com (example: Hardcover Fiction, published Dec. 5 but reflecting sales to Nov. 29).
        type: string
        required: false
        displayName: bestsellers-date
        pattern: ^\d{4}-\d{2}-\d{2}$
      published-date:
        description: |
          YYYY-MM-DD


          The date the best sellers list was published on NYTimes.com (different than bestsellers-date).  Use "current" for latest list.
        type: string
        required: false
        displayName: published-date
        pattern: ^\d{4}-\d{2}-\d{2}$
      offset:
        description: Sets the starting point of the result set (0, 20, ...).  Used to paginate thru books if list has more than 20. Defaults to 0.  The num_results field indicates how many books are in the list.
        type: integer
        required: false
        displayName: offset
    responses:
      '200':
        description: Best Sellers list books
        body:
          application/json:
            schema: |
              {
                "id": "GET_lists-formatResponse",
                "title": "GET_lists-formatResponse",
                "example": {
                  "status": "OK",
                  "copyright": "Copyright (c) 2019 The New York Times Company.  All Rights Reserved.",
                  "num_results": 1,
                  "last_modified": "2016-03-11T13:09:01-05:00",
                  "results": [
                    {
                      "list_name": "Hardcover Fiction",
                      "display_name": "Hardcover Fiction",
                      "bestsellers_date": "2016-03-05",
                      "published_date": "2016-03-20",
                      "rank": 5,
                      "rank_last_week": 2,
                      "weeks_on_list": 2,
                      "asterisk": 0,
                      "dagger": 0,
                      "amazon_product_url": "http://www.amazon.com/Girls-Guide-Moving-On-Novel-ebook/dp/B00ZNE17B4?tag=thenewyorktim-20",
                      "isbns": [
                        {
                          "isbn10": "0553391925",
                          "isbn13": "9780553391923"
                        }
                      ],
                      "book_details": [
                        {
                          "title": "A GIRL'S GUIDE TO MOVING ON",
                          "description": "A mother and her daughter-in-law both leave unhappy marriages and take up with new men.",
                          "contributor": "by Debbie Macomber",
                          "author": "Debbie Macomber",
                          "contributor_note": "",
                          "price": 0,
                          "age_group": "",
                          "publisher": "Ballantine",
                          "primary_isbn13": "9780553391923",
                          "primary_isbn10": "0553391925"
                        }
                      ],
                      "reviews": [
                        {
                          "book_review_link": "",
                          "first_chapter_link": "",
                          "sunday_review_link": "",
                          "article_chapter_link": ""
                        }
                      ]
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "copyright": {
                    "type": "string"
                  },
                  "num_results": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "last_modified": {
                    "type": "string"
                  },
                  "results": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Results1",
                      "title": "Results1",
                      "type": "object",
                      "properties": {
                        "list_name": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "bestsellers_date": {
                          "type": "string"
                        },
                        "published_date": {
                          "type": "string"
                        },
                        "rank": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "rank_last_week": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "weeks_on_list": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "asterisk": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "dagger": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "amazon_product_url": {
                          "type": "string"
                        },
                        "isbns": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "Isbn",
                            "title": "Isbn",
                            "type": "object",
                            "properties": {
                              "isbn10": {
                                "type": "string"
                              },
                              "isbn13": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "book_details": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "BookDetail",
                            "title": "BookDetail",
                            "type": "object",
                            "properties": {
                              "title": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "contributor": {
                                "type": "string"
                              },
                              "author": {
                                "type": "string"
                              },
                              "contributor_note": {
                                "type": "string"
                              },
                              "price": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "age_group": {
                                "type": "string"
                              },
                              "publisher": {
                                "type": "string"
                              },
                              "primary_isbn13": {
                                "type": "string"
                              },
                              "primary_isbn10": {
                                "type": "string"
                              }
                            }
                          }
                        },
                        "reviews": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "Review",
                            "title": "Review",
                            "type": "object",
                            "properties": {
                              "book_review_link": {
                                "type": "string"
                              },
                              "first_chapter_link": {
                                "type": "string"
                              },
                              "sunday_review_link": {
                                "type": "string"
                              },
                              "article_chapter_link": {
                                "type": "string"
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            example: "{\"status\":\"OK\",\"copyright\":\"Copyright (c) 2019 The New York Times Company.  All Rights Reserved.\",\"num_results\":1,\"last_modified\":\"2016-03-11T13:09:01-05:00\",\"results\":[{\"list_name\":\"Hardcover Fiction\",\"display_name\":\"Hardcover Fiction\",\"bestsellers_date\":\"2016-03-05\",\"published_date\":\"2016-03-20\",\"rank\":5,\"rank_last_week\":2,\"weeks_on_list\":2,\"asterisk\":0,\"dagger\":0,\"amazon_product_url\":\"http://www.amazon.com/Girls-Guide-Moving-On-Novel-ebook/dp/B00ZNE17B4?tag=thenewyorktim-20\",\"isbns\":[{\"isbn10\":\"0553391925\",\"isbn13\":\"9780553391923\"}],\"book_details\":[{\"title\":\"A GIRL'S GUIDE TO MOVING ON\",\"description\":\"A mother and her daughter-in-law both leave unhappy marriages and take up with new men.\",\"contributor\":\"by Debbie Macomber\",\"author\":\"Debbie Macomber\",\"contributor_note\":\"\",\"price\":0,\"age_group\":\"\",\"publisher\":\"Ballantine\",\"primary_isbn13\":\"9780553391923\",\"primary_isbn10\":\"0553391925\"}],\"reviews\":[{\"book_review_link\":\"\",\"first_chapter_link\":\"\",\"sunday_review_link\":\"\",\"article_chapter_link\":\"\"}]}]}"
/reviews.json:
  get:
    securedBy:
    - api-key
    description: Get book reviews.
    headers:
      Content-Type:
        required: true
        displayName: Content-Type
        enum:
        - application/json
    queryParameters:
      isbn:
        description: Searching by ISBN is the recommended method. You can enter 10- or 13-digit ISBNs.
        type: integer
        required: false
        displayName: isbn
      title:
        description: You’ll need to enter the full title of the book. Spaces in the title will be converted into the characters %20.
        type: string
        required: false
        displayName: title
      author:
        description: You’ll need to enter the author’s first and last name, separated by a space. This space will be converted into the characters %20.
        type: string
        required: false
        displayName: author
    responses:
      '200':
        description: Book reviews.
        body:
          application/json:
            schema: |
              {
                "id": "GET_reviews-formatResponse",
                "title": "GET_reviews-formatResponse",
                "example": {
                  "status": "OK",
                  "copyright": "Copyright (c) 2019 The New York Times Company.  All Rights Reserved.",
                  "num_results": 2,
                  "results": [
                    {
                      "url": "http://www.nytimes.com/2011/11/10/books/1q84-by-haruki-murakami-review.html",
                      "publication_dt": "2011-11-10",
                      "byline": "JANET MASLIN",
                      "book_title": "1Q84",
                      "book_author": "Haruki Murakami",
                      "summary": "In “1Q84,” the Japanese novelist Haruki Murakami writes about characters in a Tokyo with two moons.",
                      "isbn13": [
                        "9780307476463"
                      ]
                    }
                  ]
                },
                "type": "object",
                "properties": {
                  "status": {
                    "type": "string"
                  },
                  "copyright": {
                    "type": "string"
                  },
                  "num_results": {
                    "type": "integer",
                    "format": "int32"
                  },
                  "results": {
                    "description": "",
                    "type": "array",
                    "items": {
                      "id": "Results5",
                      "title": "Results5",
                      "type": "object",
                      "properties": {
                        "url": {
                          "type": "string"
                        },
                        "publication_dt": {
                          "type": "string"
                        },
                        "byline": {
                          "type": "string"
                        },
                        "book_title": {
                          "type": "string"
                        },
                        "book_author": {
                          "type": "string"
                        },
                        "summary": {
                          "type": "string"
                        },
                        "isbn13": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "type": "string"
                          }
                        }
                      }
                    }
                  }
                }
              }
            example: '{"status":"OK","copyright":"Copyright (c) 2019 The New York Times Company.  All Rights Reserved.","num_results":2,"results":[{"url":"http://www.nytimes.com/2011/11/10/books/1q84-by-haruki-murakami-review.html","publication_dt":"2011-11-10","byline":"JANET MASLIN","book_title":"1Q84","book_author":"Haruki Murakami","summary":"In “1Q84,” the Japanese novelist Haruki Murakami writes about characters in a Tokyo with two moons.","isbn13":["9780307476463"]}]}'
/store:
  /order:
    /{orderId}:
      uriParameters:
        orderId:
          description: ID of pet that needs to be fetched
          type: integer
          required: true
          displayName: orderId
          minimum: '1'
          maximum: '10'
      get:
        description: For valid response try integer IDs with value >= 1 and <= 10. Other values will generated exceptions
        responses:
          '200':
            description: successful operation
            body:
              application/json:
                schema: |
                  {
                    "id": "Order",
                    "title": "Order",
                    "xml": {
                      "name": "Order",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "petId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "quantity": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "shipDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "title": "Status1",
                        "description": "Order Status",
                        "type": "string",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered"
                        ]
                      },
                      "complete": {
                        "type": "boolean"
                      }
                    }
                  }
              application/xml:
                schema: |
                  {
                    "id": "Order",
                    "title": "Order",
                    "xml": {
                      "name": "Order",
                      "attribute": false,
                      "wrapped": false
                    },
                    "type": "object",
                    "properties": {
                      "id": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "petId": {
                        "type": "integer",
                        "format": "int64"
                      },
                      "quantity": {
                        "type": "integer",
                        "format": "int32"
                      },
                      "shipDate": {
                        "type": "string",
                        "format": "date-time"
                      },
                      "status": {
                        "title": "Status1",
                        "description": "Order Status",
                        "type": "string",
                        "enum": [
                          "placed",
                          "approved",
                          "delivered"
                        ]
                      },
                      "complete": {
                        "type": "boolean"
                      }
                    }
                  }
          '400':
            description: Invalid ID supplied
          '404':
            description: Order not found
      delete:
        description: For valid response try integer IDs with positive integer value. Negative or non-integer values will generate API errors
        responses:
          '400':
            description: Invalid ID supplied
          '404':
            description: Order not found
    post:
      description: Place an order for a pet
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      body:
        application/json:
          schema: |
            {
              "id": "Order",
              "title": "Order",
              "description": "order placed for purchasing the pet",
              "xml": {
                "name": "Order",
                "attribute": false,
                "wrapped": false
              },
              "type": "object",
              "properties": {
                "id": {
                  "type": "integer",
                  "format": "int64"
                },
                "petId": {
                  "type": "integer",
                  "format": "int64"
                },
                "quantity": {
                  "type": "integer",
                  "format": "int32"
                },
                "shipDate": {
                  "type": "string",
                  "format": "date-time"
                },
                "status": {
                  "title": "Status1",
                  "description": "Order Status",
                  "type": "string",
                  "enum": [
                    "placed",
                    "approved",
                    "delivered"
                  ]
                },
                "complete": {
                  "type": "boolean"
                }
              }
            }
          example: ''
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "id": "Order",
                  "title": "Order",
                  "xml": {
                    "name": "Order",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "petId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "quantity": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "shipDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "title": "Status1",
                      "description": "Order Status",
                      "type": "string",
                      "enum": [
                        "placed",
                        "approved",
                        "delivered"
                      ]
                    },
                    "complete": {
                      "type": "boolean"
                    }
                  }
                }
            application/xml:
              schema: |
                {
                  "id": "Order",
                  "title": "Order",
                  "xml": {
                    "name": "Order",
                    "attribute": false,
                    "wrapped": false
                  },
                  "type": "object",
                  "properties": {
                    "id": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "petId": {
                      "type": "integer",
                      "format": "int64"
                    },
                    "quantity": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "shipDate": {
                      "type": "string",
                      "format": "date-time"
                    },
                    "status": {
                      "title": "Status1",
                      "description": "Order Status",
                      "type": "string",
                      "enum": [
                        "placed",
                        "approved",
                        "delivered"
                      ]
                    },
                    "complete": {
                      "type": "boolean"
                    }
                  }
                }
        '400':
          description: Invalid Order
  /inventory:
    get:
      securedBy:
      - api_key
      description: Returns a map of status codes to quantities
      responses:
        '200':
          description: successful operation
          body:
            application/json:
              schema: |
                {
                  "type": "object",
                  "additionalProperties": {
                    "type": "integer",
                    "format": "int32"
                  }
                }
/lists:
  /{date}/{list}.json:
    uriParameters:
      date:
        description: |
          YYYY-MM-DD or "current"


          The date the best sellers list was published on NYTimes.com.  Use "current" to get latest list.
        type: string
        required: true
        displayName: date
        pattern: ^(\d{4}-\d{2}-\d{2}|current)$
      list:
        description: Name of the Best Sellers List (e.g. hardcover-fiction). You can get the full list of names from the /lists/names.json service.
        type: string
        required: true
        displayName: list
    get:
      securedBy:
      - api-key
      description: Get Best Sellers list by date.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      queryParameters:
        offset:
          description: Sets the starting point of the result set (0, 20, ...).  Used to paginate thru books if list has more than 20. Defaults to 0.  The num_results field indicates how many books are in the list.
          type: integer
          required: false
          displayName: offset
      responses:
        '200':
          description: Best Sellers list books.
          body:
            application/json:
              schema: |
                {
                  "id": "GET_lists-date-list-jsonResponse",
                  "title": "GET_lists-date-list-jsonResponse",
                  "example": {
                    "status": "OK",
                    "copyright": "Copyright (c) 2019 The New York Times Company.  All Rights Reserved.",
                    "num_results": 15,
                    "last_modified": "2015-12-25T13:05:20-05:00",
                    "results": {
                      "list_name": "Trade Fiction Paperback",
                      "bestsellers_date": "2015-12-19",
                      "published_date": "2016-01-03",
                      "display_name": "Paperback Trade Fiction",
                      "normal_list_ends_at": 10,
                      "updated": "WEEKLY",
                      "books": [
                        {
                          "rank": 1,
                          "rank_last_week": 0,
                          "weeks_on_list": 60,
                          "asterisk": 0,
                          "dagger": 0,
                          "primary_isbn10": "0553418025",
                          "primary_isbn13": "9780553418026",
                          "publisher": "Broadway",
                          "description": "Separated from his crew, an astronaut embarks on a quest to stay alive on Mars. The basis of the movie.",
                          "price": 0,
                          "title": "THE MARTIAN",
                          "author": "Andy Weir",
                          "contributor": "by Andy Weir",
                          "contributor_note": "",
                          "book_image": "http://du.ec2.nytimes.com.s3.amazonaws.com/prd/books/9780804139038.jpg",
                          "amazon_product_url": "http://www.amazon.com/The-Martian-Novel-Andy-Weir-ebook/dp/B00EMXBDMA?tag=thenewyorktim-20",
                          "age_group": "",
                          "book_review_link": "",
                          "first_chapter_link": "",
                          "sunday_review_link": "",
                          "article_chapter_link": "",
                          "isbns": [
                            {
                              "isbn10": "0804139024",
                              "isbn13": "9780804139021"
                            }
                          ]
                        }
                      ],
                      "corrections": []
                    }
                  },
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "copyright": {
                      "type": "string"
                    },
                    "num_results": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "last_modified": {
                      "type": "string"
                    },
                    "results": {
                      "id": "Results2",
                      "title": "Results2",
                      "type": "object",
                      "properties": {
                        "list_name": {
                          "type": "string"
                        },
                        "bestsellers_date": {
                          "type": "string"
                        },
                        "published_date": {
                          "type": "string"
                        },
                        "display_name": {
                          "type": "string"
                        },
                        "normal_list_ends_at": {
                          "type": "integer",
                          "format": "int32"
                        },
                        "updated": {
                          "type": "string"
                        },
                        "books": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "Book1",
                            "title": "Book1",
                            "type": "object",
                            "properties": {
                              "rank": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "rank_last_week": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "weeks_on_list": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "asterisk": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "dagger": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "primary_isbn10": {
                                "type": "string"
                              },
                              "primary_isbn13": {
                                "type": "string"
                              },
                              "publisher": {
                                "type": "string"
                              },
                              "description": {
                                "type": "string"
                              },
                              "price": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "title": {
                                "type": "string"
                              },
                              "author": {
                                "type": "string"
                              },
                              "contributor": {
                                "type": "string"
                              },
                              "contributor_note": {
                                "type": "string"
                              },
                              "book_image": {
                                "type": "string"
                              },
                              "amazon_product_url": {
                                "type": "string"
                              },
                              "age_group": {
                                "type": "string"
                              },
                              "book_review_link": {
                                "type": "string"
                              },
                              "first_chapter_link": {
                                "type": "string"
                              },
                              "sunday_review_link": {
                                "type": "string"
                              },
                              "article_chapter_link": {
                                "type": "string"
                              },
                              "isbns": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "Isbn",
                                  "title": "Isbn",
                                  "type": "object",
                                  "properties": {
                                    "isbn10": {
                                      "type": "string"
                                    },
                                    "isbn13": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        },
                        "corrections": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "type": "object"
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"status":"OK","copyright":"Copyright (c) 2019 The New York Times Company.  All Rights Reserved.","num_results":15,"last_modified":"2015-12-25T13:05:20-05:00","results":{"list_name":"Trade Fiction Paperback","bestsellers_date":"2015-12-19","published_date":"2016-01-03","display_name":"Paperback Trade Fiction","normal_list_ends_at":10,"updated":"WEEKLY","books":[{"rank":1,"rank_last_week":0,"weeks_on_list":60,"asterisk":0,"dagger":0,"primary_isbn10":"0553418025","primary_isbn13":"9780553418026","publisher":"Broadway","description":"Separated from his crew, an astronaut embarks on a quest to stay alive on Mars. The basis of the movie.","price":0,"title":"THE MARTIAN","author":"Andy Weir","contributor":"by Andy Weir","contributor_note":"","book_image":"http://du.ec2.nytimes.com.s3.amazonaws.com/prd/books/9780804139038.jpg","amazon_product_url":"http://www.amazon.com/The-Martian-Novel-Andy-Weir-ebook/dp/B00EMXBDMA?tag=thenewyorktim-20","age_group":"","book_review_link":"","first_chapter_link":"","sunday_review_link":"","article_chapter_link":"","isbns":[{"isbn10":"0804139024","isbn13":"9780804139021"}]}],"corrections":[]}}'
  /full-overview.json:
    get:
      securedBy:
      - api-key
      description: Get all books for all the Best Sellers lists for specified date.
      queryParameters:
        published_date:
          description: |
            YYYY-MM-DD


            The best-seller list publication date.

            You do not have to specify the exact date the list was published. The service will search forward (into the future) for the closest publication date to the date you specify. For example, a request for lists/overview/2013-05-22 will retrieve the list that was published on 05-26.


            If you do not include a published date, the current week's best sellers lists will be returned.
          type: string
          required: false
          displayName: published_date
          pattern: ^\d{4}-\d{2}-\d{2}$
      responses:
        '200':
          description: Full overview of Best Sellers lists.
          body:
            application/json:
              schema: |
                {
                  "id": "OverviewResponse",
                  "title": "OverviewResponse",
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "copyright": {
                      "type": "string"
                    },
                    "num_results": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "results": {
                      "id": "Results",
                      "title": "Results",
                      "type": "object",
                      "properties": {
                        "bestsellers_date": {
                          "type": "string"
                        },
                        "published_date": {
                          "type": "string"
                        },
                        "lists": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "List",
                            "title": "List",
                            "type": "object",
                            "properties": {
                              "list_id": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "list_name": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": "string"
                              },
                              "updated": {
                                "type": "string"
                              },
                              "list_image": {
                                "type": "string"
                              },
                              "books": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "Book",
                                  "title": "Book",
                                  "type": "object",
                                  "properties": {
                                    "age_group": {
                                      "type": "string"
                                    },
                                    "author": {
                                      "type": "string"
                                    },
                                    "contributor": {
                                      "type": "string"
                                    },
                                    "contributor_note": {
                                      "type": "string"
                                    },
                                    "created_date": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "price": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "primary_isbn13": {
                                      "type": "string"
                                    },
                                    "primary_isbn10": {
                                      "type": "string"
                                    },
                                    "publisher": {
                                      "type": "string"
                                    },
                                    "rank": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "title": {
                                      "type": "string"
                                    },
                                    "updated_date": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
  /overview.json:
    get:
      securedBy:
      - api-key
      description: Get top 5 books for all the Best Sellers lists for specified date.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      queryParameters:
        published_date:
          description: |
            YYYY-MM-DD


            The best-seller list publication date.

            You do not have to specify the exact date the list was published. The service will search forward (into the future) for the closest publication date to the date you specify. For example, a request for lists/overview/2013-05-22 will retrieve the list that was published on 05-26.


            If you do not include a published date, the current week's best sellers lists will be returned.
          type: string
          required: false
          displayName: published_date
          pattern: ^\d{4}-\d{2}-\d{2}$
      responses:
        '200':
          description: Overview of Best Sellers lists.
          body:
            application/json:
              schema: |
                {
                  "id": "OverviewResponse",
                  "title": "OverviewResponse",
                  "example": {
                    "status": "OK",
                    "copyright": "Copyright (c) 2019 The New York Times Company.  All Rights Reserved.",
                    "num_results": 210,
                    "results": {
                      "bestsellers_date": "2016-03-05",
                      "published_date": "2016-03-20",
                      "lists": [
                        {
                          "list_id": 704,
                          "list_name": "Combined Print and E-Book Fiction",
                          "display_name": "Combined Print & E-Book Fiction",
                          "updated": "WEEKLY",
                          "list_image": "http://du.ec2.nytimes.com.s3.amazonaws.com/prd/books/9780399175954.jpg",
                          "books": [
                            {
                              "age_group": "",
                              "author": "Clive Cussler and Justin Scott",
                              "contributor": "by Clive Cussler and Justin Scott",
                              "contributor_note": "",
                              "created_date": "2016-03-10 12:00:22",
                              "description": "In the ninth book in this series, set in 1906, the New York detective Isaac Bell contends with a crime boss passing as a respectable businessman and a tycoon’s plot against President Theodore Roosevelt.",
                              "price": 0,
                              "primary_isbn13": "9780698406421",
                              "primary_isbn10": "0698406427",
                              "publisher": "Putnam",
                              "rank": 1,
                              "title": "THE GANGSTER",
                              "updated_date": "2016-03-10 17:00:21"
                            }
                          ]
                        }
                      ]
                    }
                  },
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "copyright": {
                      "type": "string"
                    },
                    "num_results": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "results": {
                      "id": "Results",
                      "title": "Results",
                      "type": "object",
                      "properties": {
                        "bestsellers_date": {
                          "type": "string"
                        },
                        "published_date": {
                          "type": "string"
                        },
                        "lists": {
                          "description": "",
                          "type": "array",
                          "items": {
                            "id": "List",
                            "title": "List",
                            "type": "object",
                            "properties": {
                              "list_id": {
                                "type": "integer",
                                "format": "int32"
                              },
                              "list_name": {
                                "type": "string"
                              },
                              "display_name": {
                                "type": "string"
                              },
                              "updated": {
                                "type": "string"
                              },
                              "list_image": {
                                "type": "string"
                              },
                              "books": {
                                "description": "",
                                "type": "array",
                                "items": {
                                  "id": "Book",
                                  "title": "Book",
                                  "type": "object",
                                  "properties": {
                                    "age_group": {
                                      "type": "string"
                                    },
                                    "author": {
                                      "type": "string"
                                    },
                                    "contributor": {
                                      "type": "string"
                                    },
                                    "contributor_note": {
                                      "type": "string"
                                    },
                                    "created_date": {
                                      "type": "string"
                                    },
                                    "description": {
                                      "type": "string"
                                    },
                                    "price": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "primary_isbn13": {
                                      "type": "string"
                                    },
                                    "primary_isbn10": {
                                      "type": "string"
                                    },
                                    "publisher": {
                                      "type": "string"
                                    },
                                    "rank": {
                                      "type": "integer",
                                      "format": "int32"
                                    },
                                    "title": {
                                      "type": "string"
                                    },
                                    "updated_date": {
                                      "type": "string"
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"status":"OK","copyright":"Copyright (c) 2019 The New York Times Company.  All Rights Reserved.","num_results":210,"results":{"bestsellers_date":"2016-03-05","published_date":"2016-03-20","lists":[{"list_id":704,"list_name":"Combined Print and E-Book Fiction","display_name":"Combined Print & E-Book Fiction","updated":"WEEKLY","list_image":"http://du.ec2.nytimes.com.s3.amazonaws.com/prd/books/9780399175954.jpg","books":[{"age_group":"","author":"Clive Cussler and Justin Scott","contributor":"by Clive Cussler and Justin Scott","contributor_note":"","created_date":"2016-03-10 12:00:22","description":"In the ninth book in this series, set in 1906, the New York detective Isaac Bell contends with a crime boss passing as a respectable businessman and a tycoon’s plot against President Theodore Roosevelt.","price":0,"primary_isbn13":"9780698406421","primary_isbn10":"0698406427","publisher":"Putnam","rank":1,"title":"THE GANGSTER","updated_date":"2016-03-10 17:00:21"}]}]}}'
  /names.json:
    get:
      securedBy:
      - api-key
      description: Get Best Sellers list names.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      responses:
        '200':
          description: Get Best Sellers list names.
          body:
            application/json:
              schema: |
                {
                  "id": "GET_lists-names-formatResponse",
                  "title": "GET_lists-names-formatResponse",
                  "example": {
                    "status": "OK",
                    "copyright": "Copyright (c) 2019 The New York Times Company.  All Rights Reserved.",
                    "num_results": 53,
                    "results": [
                      {
                        "list_name": "Combined Print and E-Book Fiction",
                        "display_name": "Combined Print & E-Book Fiction",
                        "list_name_encoded": "combined-print-and-e-book-fiction",
                        "oldest_published_date": "2011-02-13",
                        "newest_published_date": "2016-03-20",
                        "updated": "WEEKLY"
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "copyright": {
                      "type": "string"
                    },
                    "num_results": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "results": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Results3",
                        "title": "Results3",
                        "type": "object",
                        "properties": {
                          "list_name": {
                            "type": "string"
                          },
                          "display_name": {
                            "type": "string"
                          },
                          "list_name_encoded": {
                            "type": "string"
                          },
                          "oldest_published_date": {
                            "type": "string"
                          },
                          "newest_published_date": {
                            "type": "string"
                          },
                          "updated": {
                            "title": "Updated",
                            "type": "string",
                            "enum": [
                              "WEEKLY",
                              "MONTHLY"
                            ]
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"status":"OK","copyright":"Copyright (c) 2019 The New York Times Company.  All Rights Reserved.","num_results":53,"results":[{"list_name":"Combined Print and E-Book Fiction","display_name":"Combined Print & E-Book Fiction","list_name_encoded":"combined-print-and-e-book-fiction","oldest_published_date":"2011-02-13","newest_published_date":"2016-03-20","updated":"WEEKLY"}]}'
  /best-sellers/history.json:
    get:
      securedBy:
      - api-key
      description: Get Best Sellers list history.
      headers:
        Content-Type:
          required: true
          displayName: Content-Type
          enum:
          - application/json
      queryParameters:
        age-group:
          description: The target age group for the best seller.
          type: string
          required: false
          displayName: age-group
        author:
          description: |
            The author of the best seller. The author field does not include additional contributors (see Data Structure for more details about the author and contributor fields).


            When searching the author field, you can specify any combination of first, middle and last names.


            When sort-by is set to author, the results will be sorted by author's first name.
          type: string
          required: false
          displayName: author
        contributor:
          description: |
            The author of the best seller, as well as other contributors such as the illustrator (to search or sort by author name only, use author instead).


            When searching, you can specify any combination of first, middle and last names of any of the contributors.


            When sort-by is set to contributor, the results will be sorted by the first name of the first contributor listed.
          type: string
          required: false
          displayName: contributor
        isbn:
          description: |
            International Standard Book Number, 10 or 13 digits


            A best seller may have both 10-digit and 13-digit ISBNs, and may have multiple ISBNs of each type. To search on multiple ISBNs, separate the ISBNs with semicolons (example: 9780446579933;0061374229).
          type: string
          required: false
          displayName: isbn
        offset:
          description: Sets the starting point of the result set (0, 20, ...).  Used to paginate thru results if there are more than 20. Defaults to 0. The num_results field indicates how many results there are total.
          type: integer
          required: false
          displayName: offset
        price:
          description: The publisher's list price of the best seller, including decimal point.
          type: string
          required: false
          displayName: price
        publisher:
          description: The standardized name of the publisher
          type: string
          required: false
          displayName: publisher
        title:
          description: |
            The title of the best seller


            When searching, you can specify a portion of a title or a full title.
          type: string
          required: false
          displayName: title
      responses:
        '200':
          description: Best Sellers list history
          body:
            application/json:
              schema: |
                {
                  "id": "GET_lists-best-sellers-history-jsonResponse",
                  "title": "GET_lists-best-sellers-history-jsonResponse",
                  "example": {
                    "status": "OK",
                    "copyright": "Copyright (c) 2019 The New York Times Company.  All Rights Reserved.",
                    "num_results": 28970,
                    "results": [
                      {
                        "title": "#GIRLBOSS",
                        "description": "An online fashion retailer traces her path to success.",
                        "contributor": "by Sophia Amoruso",
                        "author": "Sophia Amoruso",
                        "contributor_note": "",
                        "price": 0,
                        "age_group": "",
                        "publisher": "Portfolio/Penguin/Putnam",
                        "isbns": [
                          {
                            "isbn10": "039916927X",
                            "isbn13": "9780399169274"
                          }
                        ],
                        "ranks_history": [
                          {
                            "primary_isbn10": "1591847931",
                            "primary_isbn13": "9781591847939",
                            "rank": 8,
                            "list_name": "Business Books",
                            "display_name": "Business",
                            "published_date": "2016-03-13",
                            "bestsellers_date": "2016-02-27",
                            "weeks_on_list": 0,
                            "ranks_last_week": null,
                            "asterisk": 0,
                            "dagger": 0
                          }
                        ],
                        "reviews": [
                          {
                            "book_review_link": "",
                            "first_chapter_link": "",
                            "sunday_review_link": "",
                            "article_chapter_link": ""
                          }
                        ]
                      }
                    ]
                  },
                  "type": "object",
                  "properties": {
                    "status": {
                      "type": "string"
                    },
                    "copyright": {
                      "type": "string"
                    },
                    "num_results": {
                      "type": "integer",
                      "format": "int32"
                    },
                    "results": {
                      "description": "",
                      "type": "array",
                      "items": {
                        "id": "Results4",
                        "title": "Results4",
                        "type": "object",
                        "properties": {
                          "title": {
                            "type": "string"
                          },
                          "description": {
                            "type": "string"
                          },
                          "contributor": {
                            "type": "string"
                          },
                          "author": {
                            "type": "string"
                          },
                          "contributor_note": {
                            "type": "string"
                          },
                          "price": {
                            "type": "integer",
                            "format": "int32"
                          },
                          "age_group": {
                            "type": "string"
                          },
                          "publisher": {
                            "type": "string"
                          },
                          "isbns": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "Isbn",
                              "title": "Isbn",
                              "type": "object",
                              "properties": {
                                "isbn10": {
                                  "type": "string"
                                },
                                "isbn13": {
                                  "type": "string"
                                }
                              }
                            }
                          },
                          "ranks_history": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "RanksHistory",
                              "title": "RanksHistory",
                              "type": "object",
                              "properties": {
                                "primary_isbn10": {
                                  "type": "string"
                                },
                                "primary_isbn13": {
                                  "type": "string"
                                },
                                "rank": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "list_name": {
                                  "type": "string"
                                },
                                "display_name": {
                                  "type": "string"
                                },
                                "published_date": {
                                  "type": "string"
                                },
                                "bestsellers_date": {
                                  "type": "string"
                                },
                                "weeks_on_list": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "ranks_last_week": {
                                  "type": [
                                    "string",
                                    "null"
                                  ]
                                },
                                "asterisk": {
                                  "type": "integer",
                                  "format": "int32"
                                },
                                "dagger": {
                                  "type": "integer",
                                  "format": "int32"
                                }
                              }
                            }
                          },
                          "reviews": {
                            "description": "",
                            "type": "array",
                            "items": {
                              "id": "Review",
                              "title": "Review",
                              "type": "object",
                              "properties": {
                                "book_review_link": {
                                  "type": "string"
                                },
                                "first_chapter_link": {
                                  "type": "string"
                                },
                                "sunday_review_link": {
                                  "type": "string"
                                },
                                "article_chapter_link": {
                                  "type": "string"
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              example: '{"status":"OK","copyright":"Copyright (c) 2019 The New York Times Company.  All Rights Reserved.","num_results":28970,"results":[{"title":"#GIRLBOSS","description":"An online fashion retailer traces her path to success.","contributor":"by Sophia Amoruso","author":"Sophia Amoruso","contributor_note":"","price":0,"age_group":"","publisher":"Portfolio/Penguin/Putnam","isbns":[{"isbn10":"039916927X","isbn13":"9780399169274"}],"ranks_history":[{"primary_isbn10":"1591847931","primary_isbn13":"9781591847939","rank":8,"list_name":"Business Books","display_name":"Business","published_date":"2016-03-13","bestsellers_date":"2016-02-27","weeks_on_list":0,"ranks_last_week":null,"asterisk":0,"dagger":0}],"reviews":[{"book_review_link":"","first_chapter_link":"","sunday_review_link":"","article_chapter_link":""}]}]}'
